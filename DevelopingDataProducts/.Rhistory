source("http://www.openintro.org/stat/data/present.R")
present
dim(present)
names(present)
present$boys
present$girls
plot(x = present$year, y = present$girls)
plot(x = present$year, y = present$boys)
plot(x = present$year, y = present$girls, type = "l")
present$boys + present$girls
plot(present$year, present$boys + present$girls, type = "l")
max(present$boys + present$girls)
which.max(present$boys + present$girls)
present$year[22]
present$boys/present$girls
present$boys/(present$boys + present$girls)
plot(present$year, present$boys/(present$boys + present$girls), type = "l")
present$boys > present$girls
plot(present$year, present$boys/present$girls, type = "l")
abs(0-1)
0-1
abs(0-1)
abs(present$boys-present$girls)
which.max(abs(present$boys-present$girls))
present$year[24]
source("http://www.openintro.org/stat/data/cdc.R")
names(cdc)
head(cdc)
head(cdc$gender[cdc$gender="m"])
head(cdc$gender[cdc$gender=="m"])
length(cdc$gender)
length(cdc$gender[cdc$gender=="m"])
summary(cdc$weight)
table(cdc$smoke100)
table(cdc$smoke100)/20000
barplot(table(cdc$smoke100))
summary(cdc$gender)
table(cdc$genhlth)
table(cdc$genhlth)/20000
gender_smokers = table(cdc$gender, cdc$smoke100)
gender_smokers
mosaicplot(gender_smokers)
dim(cdc)
mdata = subset(cdc, cdc$gender == "m")
under23 and smoke <- subset(cdc, cdc$age < 23 & cdc$smoke100 == 1)
under23_and_smoke <- subset(cdc, cdc$age < 23 & cdc$smoke100 == 1)
boxplot(cdc$height)
summary(cdc$height)
boxplot(cdc$height ~
cdc$gender)
bmi = (cdc$weight/cdc$height^2) * 703
boxplot(bmi ~
cdc$genhlth)
boxplot(cdc$weight ~ cdc$wtdesire)
hist(cdc$age)
hist(bmi)
hist(bmi, breaks = 50)
plot(cdc$weigth, cdc$wtwiegth)
plot(cdc$weigth, cdc$wtweigth)
plot(cdc$weigth, cdc$wtdesire)
plot(cdc$weight, cdc$wtdesire)
load(url("http://www.openintro.org/stat/data/kobe.RData"))
head(kobe)
kobe$basket[1:9]
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
summary(kobe_streak)
head(table(kobe_streak))
outcomes <- c("heads", "tails")
sim_fair_coin <- sample(outcomes, size = 100, replace = TRUE)
sim_unfair_coin <- sample(outcomes, size = 100, replace = TRUE, prob = c(0.2, 0.8))
table(sim_unfair_coin)
outcomes <- c("H", "M")
sim_basket <- sample(outcomes, size = 1, replace = TRUE)
sim_basket <- sample(outcomes, size = 133, replace = TRUE, prob = c(0.45, 0.55))
basket_streak <- calc_streak(sim_basket)
barplot(table(basket_streak))
load(url("http://bit.ly/dasi_gss_data"))
head(gss)
x <- gss$tvhours[gss$tvhours <> NA]
x <- gss$tvhours[!is.na(gss$tvhours)]
length(x)
x <- gss$fear[!is.na(gss$fear)]
length(x)
head(x)
x <- gss$tvhours[!is.na(gss$tvhours)]
max(x)
median(x)
mean(x)
summary(x)
hist(gss$tvhours)
hist(gss$fear)
plot(gss$fear, gss$tvhours)
plot(gss$tvhours, gss$fear)
plot(gss$fear, gss$news)
plot(gss$race, gss$racdif1)
plot(gss$year, gss$racdif1)
plot(gss$race, gss$racdif4)
plot(gss$race, gss$racdif3)
head(gss$race)
head(gss$racdif1)
x <- gss$race[!is.na(gss$race)]
length(x)
x <- gss$racdif1[!is.na(gss$racdif1)]
length(x)
x <- gss$race[gss$race = "White"]
x <- gss$race[gss$race == "White"]
head(x)
table(x)
x <- gss$race[gss$race == "White" & !is.na(gss$racdif1)]
table(x)
x <- gss$race[gss$race == "Black" & !is.na(gss$racdif1)]
table(x)
x <- gss$race[gss$race == "Other" & !is.na(gss$racdif1)]
table(x)
page(gss)
page("gss")
x <- subset(gss, !is.na(gss$racdif1), select = c(race, racdif1))
head(x)
table(x)
head(y,n=40)
head(x,n=40)
head(x,n=40, addrownums = FALSE)
head(x,n=40, addrownums = TRUE)
head(x,n=40, addrownums = FALSE)
pnorm(rnorm(200, mean = 0.9, sd = 0.0212), mean = 0.9, sd = 0.0212, lower.tail = FALSE)
pnorm(2.36, mean = 0.9, sd = 0.0212, lower.tail = FALSE)
pnorm(0.36, mean = 0.9, sd = 0.0212, lower.tail = FALSE)
pnorm(c(0.36), mean = 0.9, sd = 0.0212, lower.tail = FALSE)
pnorm(c(2.36), mean = 0.9, sd = 0.0212, lower.tail = FALSE)
pnorm(c(2.36), mean = 0.90, sd = 0.0212, lower.tail = FALSE)
pnorm(c(2.36), mean = 0.90, sd = 0.0212)
(1.96*1.96)*0.5*0.5/(0.03*0.03)
load(url("http://bit.ly/dasi_gss_data"))
states = read.csv("http://bit.ly/dasi_states")
pov_slr = lm(poverty ~ female_house, data = states)
pov_slr
summary(pov_slr)
pov_slr = lm(poverty ~ female_house + white, data = states)
summary(pov_slr)
132.57/480.25
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
library(rCharts)
install.packages("rCharts")
library(rCharts)
install.packages("rCharts")
install.packages("rCharts")
install.packages("shiny")
load(cars)
library(cars)
dataset(cars)
plot(cars, xlab = "Speed (mph)", ylab = "Stopping distance (ft)",
las = 1)
cars.1
plot(cars, xlab = "Speed (mph)", ylab = "Stopping distance (ft)",
las = 1, xlim = c(0, 25))
d <- seq(0, 25, length.out = 200)
for(degree in 1:4) {
fm <- lm(dist ~ poly(speed, degree), data = cars)
assign(paste("cars", degree, sep = "."), fm)
lines(d, predict(fm, data.frame(speed = d)), col = degree)
}
anova(cars.1, cars.2, cars.3, cars.4)
plot(cars, xlab = "Speed (mph)", ylab = "Stopping distance (ft)",
las = 1, xlim = c(0, 25))
fm <- lm(dist ~ speed, data = cars)
lines(fm)
line(fm)
abline(fm)
predict(fm, 30)
predict(fm, data.frame(speed = 30))
predict(fm, data.frame(speed = 24))
data(cars)
points(24, predict(fm, data.frame(speed = 24)), pch=19)
setwd("C:/Felipe Rosário/Github/courses/09_DevelopingDataProducts/shiny2/testApp3")
startApp()
runApp()
library(shiny)
runApp()
setwd("C:/Felipe Rosário/Github/courses/09_DevelopingDataProducts/shiny/testApp")
runApp()
setwd("C:/Felipe Rosário/Github/datasciencecoursera/DevelopingDataProducts")
runApp()
points(24, predict(fm, data.frame(speed = 24)), pch=19)
data(cars)
plot(cars, xlab = "Speed (mph)", ylab = "Stopping distance (ft)",
las = 1, xlim = c(0, 25))
abline(fm)
predict(fm, data.frame(speed = 24))
points(24, predict(fm, data.frame(speed = 24)), pch=19)
runApp()
runApp()
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
